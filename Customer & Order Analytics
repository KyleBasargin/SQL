#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

--How many orders were placed in January?
SELECT COUNT (orderID) as "Number of Orders" 
FROM BIT_DB.JanSales;

--How many of those orders were for an iPhone?
SELECT COUNT(Product) 
FROM bit_db.JanSales
WHERE "product" = "iPhone";

--Select the customer account numbers for all the orders that were placed in February.
SELECT acctnum FROM Bit_DB.customers AS cust
INNER JOIN BIT_DB.FebSales AS Feb
ON cust.order_id=FEB.orderid;

--Which product was the cheapest one sold in January, and what was the price?
SELECT DISTINCT product, price 
FROM BIT_DB.JanSales
ORDER BY price ASC
LIMIT 1;

--What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).
SELECT SUM(quantity) * price AS Revenue,
product 
FROM BIT_DB.JanSales
GROUP BY product;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT 
SUM(quantity),
product,
SUM(Quantity)*price AS Revenue 
FROM BIT_DB.FebSales
WHERE Location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT 
COUNT(distinct cust.acctnum), 
AVG(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2;

--Display all orders between February 13, 2019 and February 18, 2019.
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate BETWEEN '02/13/19 00:00' AND '02/18/19 00:00';

--Find the address for this customer that was made on 02/18/19 01:35.
SELECT location
FROM BIT_DB.FebSales
WHERE orderdate = '02/18/19 01:35';

--Use the 'LIKE' and '%' in the WHERE clause.
SELECT SUM(quantity)
FROM BIT_DB.FebSales
WHERE orderdate LIKE '02/18/19%';

--Which product(s) contain "Batteries" within it's product name?
SELECT DISTINCT Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%';

--Display all products with an ending price of 99 cents (.99).
SELECT distinct product, price
from bit_db.FebSales
WHERE price like '%.99';

--List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT product, SUM(quantity)
FROM bit_db.FebSales
WHERE location like '%Los Angeles%'
GROUP BY product;

--Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT distinct location, count(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
GROUP BY location
HAVING count(orderID)>2;

--How many of each type of headphone was sold in February?
SELECT product, SUM(quantity) AS Quantity
FROM bit_db.FebSales
WHERE product LIKE '%headphone%'
GROUP BY product;

--What was the average amount spent per account in February?
SELECT AVG (quantity*price) AS "Average amount spent"
FROM bit_db.FebSales Feb
LEFT JOIN bit_db.customers Cust
ON Feb.orderID = cust.order_id;

--What was the average quantity of products purchased per account in February?
SELECT SUM(quantity)/count(cust.acctnum) AS "Average products purchased"
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id;

--Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT product, 
SUM (quantity*price) 
FROM bit_db.JanSales
GROUP BY product
ORDER BY SUM (quantity*price) DESC
LIMIT 1;
