# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data and answered questions using the following SQL. 

--What are the top 10 songs based on popularity?
SELECT artist_name, 
    track_name, 
    popularity
FROM bit_db.Spotifydata
ORDER BY popularity DESC
limit 10;

--Do louder songs have more "danceability" or "energy"? Display 10 loudest songs with energentic and danceability and compare results.
SELECT artist_name, 
track_name, 
danceability,
energy, 
loudness
FROM bit_db.Spotifydata
    ORDER BY loudness DESC, 
        danceability ASC, 
            energy DESC;

--Determine the AVERAGE popularity, danceability, and energy by artist and track.
SELECT artist_name,  
track_name, 
AVG(popularity), 
AVG(danceability), 
AVG(energy)
FROM bit_db.Spotifydata
GROUP BY artist_name, track_name;
